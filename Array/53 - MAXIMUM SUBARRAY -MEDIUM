53 - MAXIMUM SUBARRAY -MEDIUM
Given an integer array nums, find the 
subarray
 with the largest sum, and return its sum.

 

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.

Using KADANE'S ALGORITHM
============

class Solution {
    public int maxSubArray(int[] nums) {
        if(nums.length == 1) return nums[0];

        int max = Integer.MIN_VALUE;
        int currentSum =0;
        for(int i=0 ; i < nums.length ; i++){
            currentSum += nums[i];
            max = Math.max(max , currentSum);

            if(currentSum < 0){
                currentSum  =0;
            }
        }
        return max;
    }
}

===================

class Solution {
    public int maxSubArray(int[] nums) {
        
        int res = nums[0];
        int total =0;

        for(int i : nums){
            if(total < 0) total =0;

            total += i;
            res = Math.max(res , total);
        }
        return res;
    }
}
