290 - WORD PATTERN
Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s. Specifically:

Each letter in pattern maps to exactly one unique word in s.
Each unique word in s maps to exactly one letter in pattern.
No two letters map to the same word, and no two words map to the same letter.
 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"

Output: true

Explanation:

The bijection can be established as:

'a' maps to "dog".
'b' maps to "cat".

=========================

class Solution {
    public boolean wordPattern(String pattern, String s) {
        char[] patt = pattern.toCharArray();
        String[] words = s.split(" ");

        HashMap<Character , String> map = new HashMap<>();

        if(patt.length != words.length) return false;

        for(int i=0 ; i< patt.length ; i++){
            if(map.containsKey(patt[i])){
                if(!map.get(patt[i]).equals(words[i])){
                    return false;
                }
            }else{
                if(map.containsValue(words[i])) return false;
                map.put(patt[i] , words[i]);
            }
        }

        return true;
    }
}
