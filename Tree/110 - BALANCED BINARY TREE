110 - BALANCED BINARY TREE
Given a binary tree, determine if it is 
height-balanced
Height-Balanced
A height-balanced binary tree is a binary tree in which the depth of the two subtrees of every node never differs by more than one.
abs(height of left subtree - height of right subtree) should not be greater than 1.

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: true

Example 2:
Input: root = [1,2,2,3,3,null,null,4,4]
Output: false

===========

class Solution {
    public boolean isBalanced(TreeNode root) {
        return helper(root) != -1;

    }

    private int helper(TreeNode root){
        if(root == null) return 0;

        int left = helper(root.left);
        if(left == -1) return -1;

        int right = helper(root.right);
        if(right == -1) return -1;

        if(Math.abs(left - right) > 1) return -1;

        return Math.max(left , right) +1;
        
    }
}
