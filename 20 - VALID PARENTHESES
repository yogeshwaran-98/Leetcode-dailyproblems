20 - VALID PARENTHESES
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"

Output: true

========================

class Solution {
    public boolean isValid(String s) {

        Stack<Character> stack = new Stack<>();
        Map<Character, Character> map = new HashMap<>();
        map.put(')', '(');
        map.put('}', '{');
        map.put(']', '[');

        for(char ch: s.toCharArray()){
            if(map.containsValue(ch)){
                stack.push(ch);
            }else if(map.containsKey(ch)){
                if(stack.isEmpty() || map.get(ch) != stack.pop()){
                    return false;
                }
            }
        }

        return stack.isEmpty();
    }
}
