19 - REMOVE NTH NODE FROM END OF LIST - MEDIUM

Given the head of a linked list, remove the nth node from the end of the list and return its head.

Example 1:


Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

=============

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {

        ListNode slow = head;
        ListNode fast = head;

        int length = 0;
        while (fast != null) {
            length++;
            fast = fast.next;
        }

        if (n == length) {
            return head.next;
        }

        for (int i = 0; i < length - n - 1; i++) {
            slow = slow.next;
        }

        slow.next = slow.next.next;

        return head;
    }
}

===============

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
       ListNode dummy = new ListNode(0);
       dummy.next = head;

       ListNode slow = dummy;
       ListNode fast = dummy;

       while(n > 0){
            fast = fast.next;
            n--;
       }

       while(fast.next != null){
        fast = fast.next;
        slow = slow.next;
       }

       slow.next = slow.next.next;

       return dummy.next;
    }

}
